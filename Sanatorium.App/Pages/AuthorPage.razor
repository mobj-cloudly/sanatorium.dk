@page "/Skribent/{NameEncoded}"
@using Sanatorium.Core.Authors
@using Sanatorium.Core.ContentManagement
@using Sanatorium.Core.Posts
@inject IContentManager Content
@inject NavigationManager NavManager

@if (Author is null || AuthorsPosts is null)
{
    <Spinner/>
}
else
{
    <!-- Start Author Area  -->
    <div class="axil-author-area axil-author-banner bg-color-grey">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <AuthorComponent Author="Author"/>
                </div>
            </div>
        </div>
    </div>
    <!-- End Author Area  -->

    <div class="axil-post-list-area axil-section-gap bg-color-white">
        <div class="container">
            <div class="row">
                <ArticlesByAuthor AuthorsPosts="AuthorsPosts" Author="Author"/>
                <div class="col-lg-4 col-xl-4 mt_md--40 mt_sm--40">
                    <Sidebar/>
                </div>
            </div>
        </div>
    </div>
}

@code {

    [Parameter]
    public string? NameEncoded { get; set; }

    private Author? Author { get; set; }

    private Post[]? AuthorsPosts { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Author = Content.GetAuthorByNameEncoded(NameEncoded);
            AuthorsPosts = Content.GetPostsByAuthor(Author).ToArray();
        }
        catch (InvalidOperationException e)
        {
            NavManager.NavigateTo("404");
        }
    }

}